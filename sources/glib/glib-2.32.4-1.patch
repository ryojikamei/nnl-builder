--- glib-2.32.4/gio/tests/gdbus-peer.c	2012-07-14 21:39:30.000000000 -0900
+++ glib-2.32.4-1/gio/tests/gdbus-peer.c	2014-03-03 12:17:47.000000000 -0900
@@ -806,7 +806,7 @@
     g_assert (G_IS_SOCKET (socket));
     error = NULL;
     credentials = g_socket_get_credentials (socket, &error);
-#ifdef __linux__
+#ifdef __DUMMY__
     {
       struct ucred *native_creds;
       g_assert_no_error (error);
--- glib-2.32.4/gio/gsocket.c	2012-07-14 21:39:30.000000000 -0900
+++ glib-2.32.4-1/gio/gsocket.c	2014-03-03 12:16:27.000000000 -0900
@@ -4301,10 +4301,10 @@
 
   ret = NULL;
 
-#if defined(__linux__) || defined(__OpenBSD__)
+#if defined(__DUMMY__) || defined(__OpenBSD__)
   {
     socklen_t optlen;
-#if defined(__linux__)
+#if defined(__DUMMY__)
     struct ucred native_creds;
     optlen = sizeof (struct ucred);
 #elif defined(__OpenBSD__)
@@ -4328,7 +4328,7 @@
       {
         ret = g_credentials_new ();
         g_credentials_set_native (ret,
-#if defined(__linux__)
+#if defined(__DUMMY__)
                                   G_CREDENTIALS_TYPE_LINUX_UCRED,
 #elif defined(__OpenBSD__)
                                   G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED,
--- glib-2.32.4/gio/gunixcredentialsmessage.c	2012-04-13 22:39:41.000000000 -0900
+++ glib-2.32.4-1/gio/gunixcredentialsmessage.c	2014-03-03 12:16:51.000000000 -0900
@@ -36,7 +36,7 @@
 #include "config.h"
 
 /* ---------------------------------------------------------------------------------------------------- */
-#ifdef __linux__
+#ifdef __DUMMY__
 #include <sys/types.h>
 #include <sys/socket.h>
 #include <sys/un.h>
@@ -82,7 +82,7 @@
 static gsize
 g_unix_credentials_message_get_size (GSocketControlMessage *message)
 {
-#ifdef __linux__
+#ifdef __DUMMY__
   return sizeof (struct ucred);
 #elif defined(__FreeBSD__)
   return sizeof (struct cmsgcred);
@@ -94,7 +94,7 @@
 static int
 g_unix_credentials_message_get_level (GSocketControlMessage *message)
 {
-#ifdef __linux__
+#ifdef __DUMMY__
   return SOL_SOCKET;
 #elif defined(__FreeBSD__)
   return SOL_SOCKET;
@@ -106,7 +106,7 @@
 static int
 g_unix_credentials_message_get_msg_type (GSocketControlMessage *message)
 {
-#ifdef __linux__
+#ifdef __DUMMY__
   return SCM_CREDENTIALS;
 #elif defined(__FreeBSD__)
   return SCM_CREDS;
@@ -125,7 +125,7 @@
 
   message = NULL;
 
-#ifdef __linux__
+#ifdef __DUMMY__
   {
     GCredentials *credentials;
     struct ucred *ucred;
@@ -195,7 +195,7 @@
                                       gpointer               data)
 {
   GUnixCredentialsMessage *message = G_UNIX_CREDENTIALS_MESSAGE (_message);
-#ifdef __linux__
+#ifdef __DUMMY__
   memcpy (data,
           g_credentials_get_native (message->priv->credentials,
                                     G_CREDENTIALS_TYPE_LINUX_UCRED),
--- glib-2.32.4/gio/gfile.c	2012-07-15 04:16:55.000000000 -0900
+++ glib-2.32.4-1/gio/gfile.c	2014-03-03 12:16:01.000000000 -0900
@@ -23,7 +23,7 @@
  */
 
 #include "config.h"
-#ifdef HAVE_SPLICE
+#ifdef HAVE_SPLICE_DUMMY
 #include <sys/stat.h>
 #include <unistd.h>
 #include <fcntl.h>
@@ -2734,7 +2734,7 @@
   return res;
 }
 
-#ifdef HAVE_SPLICE
+#ifdef HAVE_SPLICE_DUMMY
 
 static gboolean
 do_splice (int     fd_in,
@@ -2870,7 +2870,7 @@
   GFileInfo *info;
   const char *target;
   gboolean result;
-#ifdef HAVE_SPLICE
+#ifdef HAVE_SPLICE_DUMMY
   gboolean fallback = TRUE;
 #endif
 
@@ -2940,7 +2940,7 @@
       return FALSE;
     }
 
-#ifdef HAVE_SPLICE
+#ifdef HAVE_SPLICE_DUMMY
   if (G_IS_FILE_DESCRIPTOR_BASED (in) && G_IS_FILE_DESCRIPTOR_BASED (out))
     {
       GError *splice_err = NULL;
--- glib-2.32.4/gio/gcredentials.c	2011-08-16 09:51:30.000000000 -0900
+++ glib-2.32.4-1/gio/gcredentials.c	2014-03-03 12:14:55.000000000 -0900
@@ -86,7 +86,7 @@
   /*< private >*/
   GObject parent_instance;
 
-#ifdef __linux__
+#ifdef __DUMMY__
   struct ucred native;
 #elif defined(__FreeBSD__)
   struct cmsgcred native;
@@ -136,7 +136,7 @@
 static void
 g_credentials_init (GCredentials *credentials)
 {
-#ifdef __linux__
+#ifdef __DUMMY__
   credentials->native.pid = getpid ();
   credentials->native.uid = geteuid ();
   credentials->native.gid = getegid ();
@@ -192,7 +192,7 @@
   g_return_val_if_fail (G_IS_CREDENTIALS (credentials), NULL);
 
   ret = g_string_new ("GCredentials:");
-#ifdef __linux__
+#ifdef __DUMMY__
   g_string_append (ret, "linux-ucred:");
   if (credentials->native.pid != -1)
     g_string_append_printf (ret, "pid=%" G_GINT64_FORMAT ",", (gint64) credentials->native.pid);
@@ -257,7 +257,7 @@
   g_return_val_if_fail (error == NULL || *error == NULL, FALSE);
 
   ret = FALSE;
-#ifdef __linux__
+#ifdef __DUMMY__
   if (credentials->native.uid == other_credentials->native.uid)
     ret = TRUE;
 #elif defined(__FreeBSD__)
@@ -305,7 +305,7 @@
 
   ret = NULL;
 
-#ifdef __linux__
+#ifdef __DUMMY__
   if (native_type != G_CREDENTIALS_TYPE_LINUX_UCRED)
     {
       g_warning ("g_credentials_get_native: Trying to get credentials of type %d but only "
@@ -366,7 +366,7 @@
                           GCredentialsType  native_type,
                           gpointer          native)
 {
-#ifdef __linux__
+#ifdef __DUMMY__
   if (native_type != G_CREDENTIALS_TYPE_LINUX_UCRED)
     {
       g_warning ("g_credentials_set_native: Trying to set credentials of type %d "
@@ -433,7 +433,7 @@
   g_return_val_if_fail (G_IS_CREDENTIALS (credentials), -1);
   g_return_val_if_fail (error == NULL || *error == NULL, -1);
 
-#ifdef __linux__
+#ifdef __DUMMY__
   ret = credentials->native.uid;
 #elif defined(__FreeBSD__)
   ret = credentials->native.cmcred_euid;
@@ -479,7 +479,7 @@
   g_return_val_if_fail (error == NULL || *error == NULL, FALSE);
 
   ret = FALSE;
-#ifdef __linux__
+#ifdef __DUMMY__
   credentials->native.uid = uid;
   ret = TRUE;
 #elif defined(__FreeBSD__)
--- glib-2.32.4/gio/gdbus-2.0/codegen/config.py	2012-07-15 06:45:57.000000000 -0900
+++ glib-2.32.4-1/gio/gdbus-2.0/codegen/config.py	2014-03-03 12:19:19.000000000 -0900
@@ -23,5 +23,5 @@
 
 DATADIR = "${prefix}/share"
 DATADIR = DATADIR.replace(
-    "${prefix}", "/usr/local")
+    "${prefix}", "/usr")
 VERSION = "2.32.4"
