--- linux-3.2.55/scripts/gcc-version.sh-prev
+++ linux-3.2.55/scripts/gcc-version.sh
@@ -22,10 +22,10 @@
 	exit 1
 fi
 
-MAJOR=$(echo __GNUC__ | $compiler -E -x c - | tail -n 1)
-MINOR=$(echo __GNUC_MINOR__ | $compiler -E -x c - | tail -n 1)
+MAJOR=`echo __GNUC__ | $compiler -E -x c - | tail -n 1`
+MINOR=`echo __GNUC_MINOR__ | $compiler -E -x c - | tail -n 1`
 if [ "x$with_patchlevel" != "x" ] ; then
-	PATCHLEVEL=$(echo __GNUC_PATCHLEVEL__ | $compiler -E -x c - | tail -n 1)
+	PATCHLEVEL=`echo __GNUC_PATCHLEVEL__ | $compiler -E -x c - | tail -n 1`
 	printf "%02d%02d%02d\\n" $MAJOR $MINOR $PATCHLEVEL
 else
 	printf "%02d%02d\\n" $MAJOR $MINOR
--- linux-3.2.55/scripts/setlocalversion-prev
+++ linux-3.2.55/scripts/setlocalversion
@@ -151,7 +151,7 @@
 fi
 
 # localversion* files in the build and source directory
-res="$(collect_files localversion*)"
+res="`collect_files localversion*`"
 if test ! "$srctree" -ef .; then
 	res="$res$(collect_files "$srctree"/localversion*)"
 fi
@@ -169,7 +169,7 @@
 	# looks at signed or annotated tags - git tag -a/-s) and
 	# LOCALVERSION= is not specified
 	if test "${LOCALVERSION+set}" != "set"; then
-		scm=$(scm_version --short)
+		scm=`scm_version --short`
 		res="$res${scm:++}"
 	fi
 fi
--- linux-3.2.55/scripts/checksyscalls.sh-prev
+++ linux-3.2.55/scripts/checksyscalls.sh
@@ -204,5 +204,5 @@
 \#endif/p' $1
 }
 
-(ignore_list && syscall_list $(dirname $0)/../arch/x86/include/asm/unistd_32.h) | \
+(ignore_list && syscall_list `dirname $0`/../arch/x86/include/asm/unistd_32.h) | \
 $* -E -x c - > /dev/null
--- linux-3.2.55/scripts/mkcompile_h-prev
+++ linux-3.2.55/scripts/mkcompile_h
@@ -43,7 +43,7 @@
 	TIMESTAMP=$KBUILD_BUILD_TIMESTAMP
 fi
 if test -z "$KBUILD_BUILD_USER"; then
-	LINUX_COMPILE_BY=$(whoami | sed 's/\\/\\\\/')
+	LINUX_COMPILE_BY=`whoami`
 else
 	LINUX_COMPILE_BY=$KBUILD_BUILD_USER
 fi
--- linux-3.2.55/scripts/gen_initramfs_list.sh-prev
+++ linux-3.2.55/scripts/gen_initramfs_list.sh
@@ -238,7 +238,7 @@
 	"-o")	# generate compressed cpio image named $1
 		shift
 		output_file="$1"
-		cpio_list="$(mktemp ${TMPDIR:-/tmp}/cpiolist.XXXXXX)"
+		cpio_list="`mktemp ${TMPDIR:-/tmp}/cpiolist.XXXXXX`"
 		output=${cpio_list}
 		echo "$output_file" | grep -q "\.gz$" && compr="gzip -n -9 -f"
 		echo "$output_file" | grep -q "\.bz2$" && compr="bzip2 -9 -f"
@@ -294,7 +294,7 @@
 				timestamp="-t $timestamp"
 			fi
 		fi
-		cpio_tfile="$(mktemp ${TMPDIR:-/tmp}/cpiofile.XXXXXX)"
+		cpio_tfile="`mktemp ${TMPDIR:-/tmp}/cpiofile.XXXXXX`"
 		usr/gen_init_cpio $timestamp ${cpio_list} > ${cpio_tfile}
 	else
 		cpio_tfile=${cpio_file}
--- linux-3.2.55/Makefile-prev
+++ linux-3.2.55/Makefile
@@ -340,7 +340,7 @@
 AWK		= awk
 GENKSYMS	= scripts/genksyms/genksyms
 INSTALLKERNEL  := installkernel
-DEPMOD		= /sbin/depmod
+DEPMOD		= /bin/true
 KALLSYMS	= scripts/kallsyms
 PERL		= perl
 CHECK		= sparse
--- linux-3.2.55/scripts/depmod.sh-prev
+++ linux-3.2.55/scripts/depmod.sh
@@ -15,7 +15,7 @@
 # older versions of depmod require the version string to start with three
 # numbers, so we cheat with a symlink here
 depmod_hack_needed=true
-tmp_dir=$(mktemp -d ${TMPDIR:-/tmp}/depmod.XXXXXX)
+tmp_dir=`mktemp -d ${TMPDIR:-/tmp}/depmod.XXXXXX`
 mkdir -p "$tmp_dir/lib/modules/$KERNELRELEASE"
 if "$DEPMOD" -b "$tmp_dir" $KERNELRELEASE 2>/dev/null; then
 	if test -e "$tmp_dir/lib/modules/$KERNELRELEASE/modules.dep" -o \
