diff -duNr findutils-4.4.2-1/gnulib/lib/freadahead.c findutils-4.4.2/gnulib/lib/freadahead.c
--- findutils-4.4.2-1/gnulib/lib/freadahead.c	2009-05-11 06:23:57.000000000 +0900
+++ findutils-4.4.2/gnulib/lib/freadahead.c	2013-12-04 23:53:33.000000000 +0900
@@ -1,5 +1,5 @@
 /* Retrieve information about a FILE stream.
-   Copyright (C) 2007 Free Software Foundation, Inc.
+   Copyright (C) 2007-2013 Free Software Foundation, Inc.
 
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -19,48 +19,75 @@
 /* Specification.  */
 #include "freadahead.h"
 
+#include <stdlib.h>
+#include "stdio-impl.h"
+
 size_t
 freadahead (FILE *fp)
 {
-#if defined _IO_ferror_unlocked     /* GNU libc, BeOS */
+#if defined _IO_ftrylockfile || __GNU_LIBRARY__ == 1 /* GNU libc, BeOS, Haiku, Linux libc5 */
   if (fp->_IO_write_ptr > fp->_IO_write_base)
     return 0;
-  return fp->_IO_read_end - fp->_IO_read_ptr;
-#elif defined __sferror             /* FreeBSD, NetBSD, OpenBSD, MacOS X, Cygwin */
-  if ((fp->_flags & __SWR) != 0 || fp->_r < 0)
+  return (fp->_IO_read_end - fp->_IO_read_ptr)
+         + (fp->_flags & _IO_IN_BACKUP ? fp->_IO_save_end - fp->_IO_save_base :
+            0);
+#elif defined __sferror || defined __DragonFly__ /* FreeBSD, NetBSD, OpenBSD, DragonFly, Mac OS X, Cygwin */
+  if ((fp_->_flags & __SWR) != 0 || fp_->_r < 0)
     return 0;
-  return fp->_r;
-#elif defined _IOERR                /* AIX, HP-UX, IRIX, OSF/1, Solaris, mingw */
-# if defined __sun && defined _LP64 /* Solaris/{SPARC,AMD64} 64-bit */
-#  define fp_ ((struct { unsigned char *_ptr; \
-			 unsigned char *_base; \
-			 unsigned char *_end; \
-			 long _cnt; \
-			 int _file; \
-			 unsigned int _flag; \
-		       } *) fp)
+# if defined __DragonFly__
+  return __sreadahead (fp);
+# else
+  return fp_->_r
+         + (HASUB (fp) ? fp_->_ur : 0);
+# endif
+#elif defined __EMX__               /* emx+gcc */
+  if ((fp->_flags & _IOWRT) != 0)
+    return 0;
+  /* Note: fp->_ungetc_count > 0 implies fp->_rcount <= 0,
+           fp->_ungetc_count = 0 implies fp->_rcount >= 0.  */
+  /* equivalent to
+     (fp->_ungetc_count == 0 ? fp->_rcount : fp->_ungetc_count - fp->_rcount) */
+  return (fp->_rcount > 0 ? fp->_rcount : fp->_ungetc_count - fp->_rcount);
+#elif defined __minix               /* Minix */
+  if ((fp_->_flags & _IOWRITING) != 0)
+    return 0;
+  return fp_->_count;
+#elif defined _IOERR                /* AIX, HP-UX, IRIX, OSF/1, Solaris, OpenServer, mingw, NonStop Kernel */
   if ((fp_->_flag & _IOWRT) != 0)
     return 0;
   return fp_->_cnt;
-# else
-  if ((fp->_flag & _IOWRT) != 0)
-    return 0;
-  return fp->_cnt;
-# endif
 #elif defined __UCLIBC__            /* uClibc */
 # ifdef __STDIO_BUFFERS
   if (fp->__modeflags & __FLAG_WRITING)
     return 0;
-  return fp->__bufread - fp->__bufpos;
+  return (fp->__bufread - fp->__bufpos)
+         + (fp->__modeflags & __FLAG_UNGOT ? 1 : 0);
 # else
   return 0;
 # endif
 #elif defined __QNX__               /* QNX */
   if ((fp->_Mode & 0x2000 /* _MWRITE */) != 0)
     return 0;
-  /* fp->_Buf <= fp->_Next <= fp->_Rend */
-  return fp->_Rend - fp->_Next;
+  /* fp->_Buf <= fp->_Next <= fp->_Rend,
+     and fp->_Rend may be overridden by fp->_Rsave. */
+  return ((fp->_Rsave ? fp->_Rsave : fp->_Rend) - fp->_Next)
+         + (fp->_Mode & 0x4000 /* _MBYTE */
+            ? (fp->_Back + sizeof (fp->_Back)) - fp->_Rback
+            : 0);
+#elif defined __MINT__              /* Atari FreeMiNT */
+  if (!fp->__mode.__read)
+    return 0;
+  return (fp->__pushed_back
+          ? fp->__get_limit - fp->__pushback_bufp + 1
+          : fp->__get_limit - fp->__bufp);
+#elif defined EPLAN9                /* Plan9 */
+  if (fp->state == 4 /* WR */ || fp->rp >= fp->wp)
+    return 0;
+  return fp->wp - fp->rp;
+#elif defined SLOW_BUT_NO_HACKS     /* users can define this */
+  abort ();
+  return 0;
 #else
- #error "Please port gnulib freadahead.c to your platform! Look at the definition of fflush, fread on your system, then report this to bug-gnulib."
+ #error "Please port gnulib freadahead.c to your platform! Look at the definition of fflush, fread, ungetc on your system, then report this to bug-gnulib."
 #endif
 }
diff -duNr findutils-4.4.2-1/gnulib/lib/freadahead.h findutils-4.4.2/gnulib/lib/freadahead.h
--- findutils-4.4.2-1/gnulib/lib/freadahead.h	2009-05-11 06:23:57.000000000 +0900
+++ findutils-4.4.2/gnulib/lib/freadahead.h	2013-12-04 23:53:33.000000000 +0900
@@ -1,5 +1,5 @@
 /* Retrieve information about a FILE stream.
-   Copyright (C) 2007 Free Software Foundation, Inc.
+   Copyright (C) 2007-2013 Free Software Foundation, Inc.
 
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
@@ -17,20 +17,31 @@
 #include <stddef.h>
 #include <stdio.h>
 
-#ifdef __cplusplus
-extern "C" {
-#endif
-
 /* Assuming the stream STREAM is open for reading:
    Return the number of bytes waiting in the input buffer of STREAM.
+   This includes both the bytes that have been read from the underlying input
+   source and the bytes that have been pushed back through 'ungetc'.
 
    If this number is 0 and the stream is not currently writing,
    fflush (STREAM) is known to be a no-op.
 
    STREAM must not be wide-character oriented.  */
 
-extern size_t freadahead (FILE *stream);
+#if HAVE___FREADAHEAD /* musl libc */
 
-#ifdef __cplusplus
+# include <stdio_ext.h>
+# define freadahead(stream) __freadahead (stream)
+
+#else
+
+# ifdef __cplusplus
+extern "C" {
+# endif
+
+extern size_t freadahead (FILE *stream) _GL_ATTRIBUTE_PURE;
+
+# ifdef __cplusplus
 }
+# endif
+
 #endif
